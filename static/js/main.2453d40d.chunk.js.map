{"version":3,"sources":["assets/engineer.svg","constants/IconMarker.jsx","constants/IconMarkerPin.jsx","components/button-control/index.jsx","hooks/geo-location/index.js","resources/data/list-positions.js","Map.jsx","App.jsx","index.jsx"],"names":["module","exports","L","icon","iconSize","iconAnchor","popupAnchor","iconUrl","shadowUrl","Icon","require","ButtonControl","mapLayers","onStopMoving","onStartMoving","onShow","className","JSON","stringify","type","onClick","useGeoLocation","useState","loaded","coordinates","lat","lng","location","setLocation","onSuccess","coords","latitude","longitude","onError","error","code","message","useEffect","navigator","geolocation","getCurrentPosition","listLocationUser","PrintControl","withLeaflet","PrintControlDefault","DamageAssessment","userLocation","usePosition","center","setCenter","setMapLayers","count","setCount","inprogress","setInprogress","locationMoving","setLocationMoving","mapRef","useRef","printControl","onTimeout","current","setTimeout","c","clearTimeout","console","log","newListMoving","indexLocation","push","length","Map","zoom","ref","style","height","Marker","position","Popup","map","loca","index","CircleMarker","key","fill","color","radius","TileLayer","url","maxZoom","subdomains","Polyline","positions","layer","latlngs","IconMarkerPin","id","name","onChange","e","target","value","sizeModes","hideControlContainer","title","exportOnly","FeatureGroup","onCreated","layerType","_leaflet_id","layers","getLatLngs","onEdited","_layers","Object","values","editing","l","onDeleted","filter","draw","rectangle","polyline","circle","circlemarker","marker","alert","leafletElement","flyTo","animate","rootElement","document","getElementById","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.2453d40d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/engineer.f8a39b5d.svg\";","import L from \"leaflet\";\r\n\r\nexport default L.icon({\r\n  iconSize: [25, 41],\r\n  iconAnchor: [10, 41],\r\n  popupAnchor: [2, -40],\r\n  iconUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-icon.png\",\r\n  shadowUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-shadow.png\"\r\n});\r\n","import L from \"leaflet\";\r\n\r\nexport default  new L.Icon({\r\n  iconUrl: require(\"../assets/engineer.svg\"),\r\n  iconSize: [37, 45],\r\n  iconAnchor: [17, 46],//[left/top, right/bottom]\r\n  popupAnchor: [2, -40],\r\n})\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ButtonControl = ({ mapLayers, onStopMoving, onStartMoving, onShow }) => {\r\n    return (\r\n        <div className=\"row-info\">\r\n            <pre className=\"text-left\">{JSON.stringify(mapLayers, 0, 2)}</pre>\r\n            <div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"button-get-location button-unmove\"\r\n                    onClick={onStopMoving}>\r\n                    Stop moving\r\n                </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"button-get-location button-moving\"\r\n                    onClick={onStartMoving}>\r\n                    Start moving\r\n                </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"button-get-location\"\r\n                    onClick={onShow}>\r\n                    Get my location\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nButtonControl.propTypes = {\r\n    mapLayers: PropTypes.array,\r\n    onStopMoving: PropTypes.func,\r\n    onStartMoving: PropTypes.func,\r\n    onShow: PropTypes.func\r\n};\r\n\r\nexport default ButtonControl;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction useGeoLocation() {\r\n    const [location, setLocation] = useState({\r\n        loaded: false,\r\n        coordinates: { lat: '', lng: '' }\r\n    });\r\n\r\n    const onSuccess = location => {\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude\r\n            }\r\n        });\r\n    };\r\n\r\n    const onError = error => {\r\n        setLocation({\r\n            loaded: true,\r\n            error: {\r\n                code: error.code,\r\n                message: error.message\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!('geolocation' in navigator)) {\r\n            onError({\r\n                code: 0,\r\n                message: 'Geolocation not supported'\r\n            });\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n    }, []);\r\n\r\n    return location;\r\n}\r\nexport default useGeoLocation;\r\n","export const listLocationUser = [\r\n    {\r\n        lat: 16.0742517,\r\n        lng: 108.2186261\r\n    },\r\n    {\r\n        lat: 16.07414,\r\n        lng: 108.217333\r\n    },\r\n    {\r\n        lat: 16.074088,\r\n        lng: 108.216818\r\n    },\r\n    {\r\n        lat: 16.073934,\r\n        lng: 108.216174\r\n    },\r\n\r\n    {\r\n        lat: 16.073851,\r\n        lng: 108.21525\r\n    },\r\n    {\r\n        lat: 16.073665,\r\n        lng: 108.214813\r\n    },\r\n    {\r\n        lat: 16.073542,\r\n        lng: 108.21393\r\n    },\r\n    {\r\n        lat: 16.072284,\r\n        lng: 108.213139\r\n    },\r\n    {\r\n        lat: 16.071665,\r\n        lng: 108.213246\r\n    },\r\n    {\r\n        lat: 16.07216,\r\n        lng: 108.216842\r\n    },\r\n    {\r\n        lat: 16.072428,\r\n        lng: 108.218439\r\n    },\r\n    {\r\n        lat: 16.072773,\r\n        lng: 108.220883\r\n    },\r\n    {\r\n        lat: 16.072773,\r\n        lng: 108.220883\r\n    },\r\n    {\r\n        lat: 16.074835,\r\n        lng: 108.220603\r\n    },\r\n    {\r\n        lat: 16.0742517,\r\n        lng: 108.2186261\r\n    }\r\n];\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n    Map,\r\n    TileLayer,\r\n    FeatureGroup,\r\n    Marker,\r\n    Popup,\r\n    withLeaflet,\r\n    Polyline,\r\n    CircleMarker\r\n} from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\nimport { EditControl } from 'react-leaflet-draw';\r\nimport 'leaflet-draw';\r\nimport PrintControlDefault from 'react-leaflet-easyprint';\r\nimport { usePosition } from 'use-position';\r\nimport icon from './constants/IconMarker';\r\nimport IconMarkerPin from './constants/IconMarkerPin';\r\nimport ButtonControl from './components/button-control';\r\nimport useGeoLocation from './hooks/geo-location';\r\nimport { listLocationUser } from './resources/data/list-positions.js';\r\n\r\nconst PrintControl = withLeaflet(PrintControlDefault);\r\n\r\nconst ZOOM_LEVEL = 16;\r\n\r\nconst DamageAssessment = () => {\r\n    const userLocation = useGeoLocation();\r\n    const { latitude, longitude, error } = usePosition();\r\n\r\n    const [center, setCenter] = useState({ lat: 51.51, lng: -0.06 });\r\n    const [mapLayers, setMapLayers] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n    const [inprogress, setInprogress] = useState(false);\r\n    const [locationMoving, setLocationMoving] = useState([]);\r\n\r\n    const mapRef = useRef();\r\n    const printControl = useRef();\r\n    let onTimeout = useRef();\r\n\r\n    useEffect(() => {\r\n        if (typeof count === 'number' && inprogress) {\r\n            onTimeout.current = setTimeout(() => {\r\n                setCount(c => c + 10000);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(onTimeout.current);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (latitude && longitude && !error) {\r\n            // Fetch weather data here.\r\n            console.log('latitude', latitude);\r\n            console.log('longitude', longitude);\r\n            console.log('count', count);\r\n            if (!inprogress) return;\r\n            let newListMoving = [];\r\n\r\n            let indexLocation = count / 10000;\r\n            console.log('indexLocation', indexLocation);\r\n            if (count === 0) {\r\n                newListMoving.push(listLocationUser[count]);\r\n            } else if (indexLocation >= listLocationUser.length) {\r\n                setInprogress(false);\r\n                return clearTimeout(onTimeout.current);\r\n            } else {\r\n                newListMoving.push(listLocationUser[indexLocation]);\r\n            }\r\n\r\n            setLocationMoving([...newListMoving, ...locationMoving]);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [count, inprogress]);\r\n\r\n    useEffect(() => {\r\n        if (userLocation.loaded && userLocation.error) return;\r\n        setCenter({\r\n            lat: userLocation.coordinates.lat,\r\n            lng: userLocation.coordinates.lng\r\n        });\r\n    }, [userLocation]);\r\n\r\n    const handleCreate = e => {\r\n        console.log(e);\r\n\r\n        const { layerType, layer } = e;\r\n        if (layerType === 'polygon') {\r\n            const { _leaflet_id } = layer;\r\n\r\n            setMapLayers(layers => [\r\n                ...layers,\r\n                { id: _leaflet_id, latlngs: layer.getLatLngs()[0] }\r\n            ]);\r\n        }\r\n    };\r\n\r\n    const handleEdited = e => {\r\n        console.log(e);\r\n        const {\r\n            layers: { _layers }\r\n        } = e;\r\n\r\n        Object.values(_layers).map(({ _leaflet_id, editing }) =>\r\n            setMapLayers(layers =>\r\n                layers.map(l =>\r\n                    l.id === _leaflet_id\r\n                        ? { ...l, latlngs: { ...editing.latlngs[0] } }\r\n                        : l\r\n                )\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleDeleted = e => {\r\n        console.log(e);\r\n        const {\r\n            layers: { _layers }\r\n        } = e;\r\n\r\n        Object.values(_layers).map(({ _leaflet_id }) =>\r\n            setMapLayers(layers => layers.filter(l => l.id !== _leaflet_id))\r\n        );\r\n    };\r\n\r\n    const showMyLocation = () => {\r\n        if (userLocation.loaded && !userLocation.error) {\r\n            mapRef.current.leafletElement.flyTo(\r\n                [userLocation.coordinates.lat, userLocation.coordinates.lng],\r\n                ZOOM_LEVEL,\r\n                { animate: true }\r\n            );\r\n            setCenter({\r\n                lat: userLocation.coordinates.lat,\r\n                lng: userLocation.coordinates.lng\r\n            });\r\n        } else {\r\n            alert(userLocation.error.message);\r\n        }\r\n    };\r\n\r\n    const handleStopMoving = () => {\r\n        alert('Stop moving!');\r\n        clearTimeout(onTimeout.current);\r\n    };\r\n\r\n    const handleStartMoving = () => {\r\n        alert('Start moving!');\r\n        setInprogress(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Map\r\n                center={{ lat: 51.51, lng: -0.06 }}\r\n                zoom={ZOOM_LEVEL}\r\n                ref={mapRef}\r\n                style={{ height: '50vh' }}>\r\n                <Marker position={center} icon={icon}>\r\n                    <Popup>You are here.</Popup>\r\n                </Marker>\r\n\r\n                {locationMoving &&\r\n                    locationMoving.length > 0 &&\r\n                    locationMoving.map(\r\n                        (loca, index) =>\r\n                            JSON.stringify(loca) !== JSON.stringify(center) && (\r\n                                <CircleMarker\r\n                                    key={index}\r\n                                    center={loca}\r\n                                    fill={true}\r\n                                    color=\"#220bb9\"\r\n                                    radius={3}>\r\n                                    <Popup>\r\n                                        <b>lat:</b> {loca?.lat} <br />\r\n                                        <b>lng:</b> {loca?.lng} <br />\r\n                                    </Popup>\r\n                                </CircleMarker>\r\n                            )\r\n                    )}\r\n                <TileLayer\r\n                    url=\"https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\"\r\n                    maxZoom={20}\r\n                    subdomains={['mt1', 'mt2', 'mt3']}\r\n                />\r\n                <Polyline color=\"#220bb9\" positions={locationMoving} />\r\n                {mapLayers &&\r\n                    mapLayers.length > 0 &&\r\n                    mapLayers.map(layer =>\r\n                        layer.latlngs.map((location, index) => (\r\n                            <Marker\r\n                                key={index}\r\n                                position={location}\r\n                                icon={IconMarkerPin}>\r\n                                <Popup>\r\n                                    You are here.\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        id=\"myfile\"\r\n                                        name=\"myfile\"\r\n                                        onChange={e =>\r\n                                            console.log(e.target.value)\r\n                                        }\r\n                                    />\r\n                                </Popup>\r\n                            </Marker>\r\n                        ))\r\n                    )}\r\n                <PrintControl\r\n                    ref={printControl}\r\n                    position=\"topleft\"\r\n                    sizeModes={['Current', 'A4Portrait', 'A4Landscape']}\r\n                    hideControlContainer={false}\r\n                />\r\n                <PrintControl\r\n                    position=\"topleft\"\r\n                    sizeModes={['Current', 'A4Portrait', 'A4Landscape']}\r\n                    hideControlContainer={false}\r\n                    title=\"Export as PNG\"\r\n                    exportOnly\r\n                />\r\n                <FeatureGroup>\r\n                    <EditControl\r\n                        position=\"topright\"\r\n                        onCreated={handleCreate}\r\n                        onEdited={handleEdited}\r\n                        onDeleted={handleDeleted}\r\n                        draw={{\r\n                            rectangle: true,\r\n                            polyline: true,\r\n                            circle: true,\r\n                            circlemarker: true,\r\n                            marker: true\r\n                        }}\r\n                    />\r\n                </FeatureGroup>\r\n            </Map>\r\n            <ButtonControl\r\n                mapLayers={mapLayers}\r\n                onStopMoving={handleStopMoving}\r\n                onStartMoving={handleStartMoving}\r\n                onShow={showMyLocation}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DamageAssessment;\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport DamageAssessment from './Map';\r\n\r\nexport default () => <DamageAssessment />;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    rootElement\r\n);\r\n"],"sourceRoot":""}